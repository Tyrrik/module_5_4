class House:
    houses_history = []
    def __new__(cls, *args, **kwargs):
        name = args[0] if args else None
        if name:
            cls.houses_history.append(name)
            return super().__new__(cls)
        return
    def __init__(self,name,number_of_floors):
        self.name = name
        self.number_of_floors = number_of_floors
    def go_to(self, new_floor):
        if 1 <= new_floor <= self.number_of_floors:
            for floor in range(1, new_floor + 1):
                print(floor)
        else:
            print("Такого этажа не существует")

    def __del__(self):
        print(f"{self.name} Снесен, но он останется в этой истории.")

    def __len__(self):
        return self.number_of_floors

    def __str__(self):
        return f"Название: {self.name}, Количество этажей: {self.number_of_floors}"


    def __eq__(self, other):
            return self.number_of_floors == other

    def __lt__(self, other):
        return self.number_of_floors<other

    def __le__(self, other):
        return self.number_of_floors <= other

    def __gt__(self, other):
        return self.number_of_floors > other

    def __ge__(self, other):
        return self.number_of_floors >= other

    def __ne__(self, other):
        return self.number_of_floors != other

    def __add__(self, value):
        return f"Название:{self.name}, Количество этажей: {self.number_of_floors + value}"

    def __radd__(self, value):
        return f"Название:{self.name}, Количество этажей: {self.number_of_floors + value}"

    def __iadd__(self, other):
           return f"Название:{self.name}, Количество этажей: {self.number_of_floors + other}"




h1 = House('ЖК Эльбрус', 10)
print(House.houses_history)
h2 = House('ЖК Акация', 20)
print(House.houses_history)
h3 = House('ЖК Матрёшки', 20)
print(House.houses_history)

# Удаление объектов
del h2
del h3

print(House.houses_history)
